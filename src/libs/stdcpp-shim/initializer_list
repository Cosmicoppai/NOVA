#pragma once

#include <stddef.h>

namespace std {

template <typename T>
struct initializer_list {
    T const *_data;
    size_t _size;

    constexpr initializer_list() : _data(nullptr), _size(0) {}

    constexpr initializer_list(T const *data, size_t size) : _data(data), _size(size) {}

    constexpr T const *begin() const { return _data; }

    constexpr T const *end() const { return _data + _size; }

    constexpr size_t size() const { return _size; }

    constexpr bool empty() const { return _size == 0; }
};

} // namespace std
